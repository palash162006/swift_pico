// generated from rosidl_adapter/resource/msg.idl.em
// with input from mav_msgs/msg/Status.msg
// generated code does not contain a copyright notice

#include "std_msgs/msg/Header.idl"

module mav_msgs {
  module msg {
    module Status_Constants {
      const string RC_COMMAND_ATTITUDE = "attitude_thrust";
      const string RC_COMMAND_ATTITUDE_HEIGHT = "attitude_height";
      const string RC_COMMAND_POSITION = "position";
      const string MOTOR_STATUS_RUNNING = "running";
      const string MOTOR_STATUS_STOPPED = "stopped";
      const string MOTOR_STATUS_STARTING = "starting";
      const string MOTOR_STATUS_STOPPING = "stopping";
      const string GPS_STATUS_LOCK = "lock";
      const string GPS_STATUS_NO_LOCK = "no_lock";
    };
    struct Status {
      std_msgs::msg::Header header;

      @verbatim (language="comment", text=
        "If values are not known / available, set to -1 or empty string.")
      string vehicle_name;

      @verbatim (language="comment", text=
        "E.g. firefly, pelican ...")
      string vehicle_type;

      @verbatim (language="comment", text=
        "Battery voltage in V.")
      float battery_voltage;

      @verbatim (language="comment", text=
        "Command mode set on the 3 position switch on the rc.")
      string rc_command_mode;

      @verbatim (language="comment", text=
        "Reports whether the serial command interface is enabled.")
      boolean command_interface_enabled;

      @verbatim (language="comment", text=
        "Flight time in s.")
      float flight_time;

      @verbatim (language="comment", text=
        "MAV uptime in s.")
      float system_uptime;

      @verbatim (language="comment", text=
        "MAV CPU load: 0.0 ... 1.0")
      float cpu_load;

      @verbatim (language="comment", text=
        "Current motor status: running, stopped, starting, stopping.")
      string motor_status;

      @verbatim (language="comment", text=
        "True if vehicle is actually in air, false otherwise")
      boolean in_air;

      @verbatim (language="comment", text=
        "GPS status: lock, no_lock")
      string gps_status;

      @verbatim (language="comment", text=
        "Number of visible satellites")
      int32 gps_num_satellites;
    };
  };
};
